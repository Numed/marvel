{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","View","desc","char","name","description","thumbnail","homepage","wiki","style","className","src","includes","notImg","alt","objectFit","href","RandomChar","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","erorrMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","getAllCharacters","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","selected","setSelected","onRequest","initial","onCharListLoaded","newCharList","ended","length","items","map","item","i","imgStyle","tabIndex","onCharSelected","onKeyPress","e","key","errorMessage","disabled","display","Skeleton","comics","checkDescription","to","resourceURI","substring","CharInfo","charId","skeleton","MainPage","selectedChar","state","setState","decoration"],"mappings":"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","file":"static/js/4.bf999123.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import React, { useState, useEffect } from \"react\";\nimport \"./randomChar.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"../spinner/spinner.scss\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    clearError();\n    updateChar();\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n    clearError();\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const erorrMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {erorrMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  const onEmptyDescription = (desc) => {\n    if (desc !== \"\") {\n      return desc;\n    } else {\n      return (desc = \"No description yet.\");\n    }\n  };\n\n  let style = false;\n\n  const notImg = (thumbnail) => {\n    if (thumbnail.includes(\"image_not_available\")) {\n      style = true;\n      return style, thumbnail;\n    }\n    return thumbnail;\n  };\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={notImg(thumbnail)}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={style ? { objectFit: \"contain\" } : { objectFit: \"cover\" }}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{onEmptyDescription(description)}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./charList.scss\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst CharList = (props) => {\n  const { loading, error, getAllCharacters, clearError } = useMarvelService();\n\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const [selected, setSelected] = useState(null);\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    clearError();\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const selectChar = (id) => {\n    if (id != \"\" || id != null) {\n      setSelected(id);\n    }\n  };\n\n  const View = (arr) => {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          key={i}\n          className={\n            selected == item.id\n              ? \"char__item char__item_selected\"\n              : \"char__item\"\n          }\n          tabIndex={0}\n          onClick={() => {\n            return props.onCharSelected(item.id), selectChar(item.id);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  };\n\n  const items = View(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default CharList;\n","import \"./skeleton.scss\";\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import React, { useEffect, useState } from \"react\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Skeletion from \"../skeleton/Skeleton\";\nimport \"./charInfo.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeletion />;\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let style = false;\n\n  function notImg(thumbnail) {\n    if (thumbnail.includes(\"image_not_available\")) {\n      style = true;\n      return style, thumbnail;\n    }\n    return thumbnail;\n  }\n\n  function checkDescription(description) {\n    if (description != \"\") {\n      return description;\n    } else {\n      return (description = \"There is no description yet.\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img\n          src={notImg(thumbnail)}\n          alt={name}\n          style={style ? { objectFit: \"contain\" } : { objectFit: \"cover\" }}\n        />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">HomePage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{checkDescription(description)}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"Didn't have a comics.\"}\n        {comics.map((item, i) => {\n          if (i <= 9) {\n            return (\n              <li key={i} className=\"char__comics-item\">\n                <NavLink to={`/comics/${item.resourceURI.substring(43)}`}>\n                  {item.name}\n                </NavLink>\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [state, setState] = useState({\r\n    selectedChar: null,\r\n  });\r\n\r\n  const onCharSelected = (id) => {\r\n    setState({\r\n      selectedChar: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RandomChar />\r\n      <div className=\"char__content\">\r\n        <CharList onCharSelected={onCharSelected} />\r\n        <CharInfo charId={state.selectedChar} />\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}