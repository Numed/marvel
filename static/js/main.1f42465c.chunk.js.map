{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/ErrorMessage/error.gif","components/ErrorMessage/ErrorMessage.js","components/spinner/Spinner.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","Spinner","View","desc","includes","notImg","RandomChar","marvelService","useState","loading","error","value","setValue","onCharLoaded","onError","updateChar","Math","floor","random","then","catch","useEffect","erorrMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","setLoading","setError","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","selected","setSelected","onRequest","onCharListLoaded","newCharList","ended","length","arr","item","i","imgStyle","tabIndex","onCharSelected","onKeyPress","e","key","errorMessage","disabled","Skeleton","checkDescription","CharInfo","state","setState","charId","skeleton","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f42465c.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n  _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  _apiKey = \"apikey=3b3962af7c9aa2832c028fd9f23a5a5c\";\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`\r\n    );\r\n    return res.data.results.map(this._transformCharacter);\r\n  };\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters/${id}?${this._apiKey}`\r\n    );\r\n    return this._transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n}\r\n\r\nexport default MarvelService;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nfunction ErrorMessage() {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import \"./spinner.scss\";\r\n\r\nfunction Spinner() {\r\n  return <div className=\"lds-dual-ring\"></div>;\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./randomChar.scss\";\nimport MarvelService from \"../../services/MarvelService\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"../spinner/spinner.scss\";\n\nconst RandomChar = () => {\n  const marvelService = new MarvelService();\n\n  const [value, setValue] = useState({\n    char: {},\n    loading: true,\n    error: false,\n  });\n\n  const onCharLoading = () => {\n    setValue({ loading: true });\n  };\n\n  const onCharLoaded = (char) => {\n    setValue({ char, loading: false });\n  };\n\n  const onError = () => {\n    setValue({\n      loading: false,\n      error: true,\n    });\n  };\n\n  function updateChar() {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    onCharLoading();\n    marvelService.getCharacter(id).then(onCharLoaded).catch(onError);\n  }\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  const { char, loading, error } = value;\n  const erorrMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {erorrMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  function onEmptyDescription(desc) {\n    if (desc !== \"\") {\n      return desc;\n    } else {\n      return (desc = \"No description yet.\");\n    }\n  }\n\n  let style = false;\n\n  function notImg(thumbnail) {\n    if (thumbnail.includes(\"image_not_available\")) {\n      style = true;\n      return style, thumbnail;\n    }\n    return thumbnail;\n  }\n\n  const { name, description, thumbnail, homepage, wiki } = char;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={notImg(thumbnail)}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={style ? { objectFit: \"contain\" } : { objectFit: \"cover\" }}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{onEmptyDescription(description)}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./charList.scss\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport MarvelService from \"../../services/MarvelService\";\n\nconst CharList = (props) => {\n  const marvelService = new MarvelService();\n\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const [selected, setSelected] = useState(null);\n\n  useEffect(() => {\n    onRequest();\n  }, []);\n\n  const onCharListLoading = () => {\n    setNewItemLoading(true);\n  };\n\n  const onRequest = (offset) => {\n    onCharListLoading();\n    marvelService\n      .getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .catch(onError);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList((charList) => [...charList, ...newCharList]);\n    setLoading((loading) => false);\n    setNewItemLoading((newItemLoading) => false);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const onError = () => {\n    setError(true);\n    setLoading((loading) => false);\n  };\n\n  const selectChar = (id) => {\n    if (id != \"\" || id != null) {\n      setSelected(id);\n    }\n  };\n\n  const View = (arr) => {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          key={item.id}\n          className={\n            selected == item.id\n              ? \"char__item char__item_selected\"\n              : \"char__item\"\n          }\n          tabIndex={0}\n          onClick={() => {\n            return props.onCharSelected(item.id), selectChar(item.id);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  };\n\n  const items = View(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? items : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <button\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default CharList;\n","import \"./skeleton.scss\";\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import React, { useEffect, useState } from \"react\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport Skeletion from \"../skeleton/Skeleton\";\nimport \"./charInfo.scss\";\nimport MarvelService from \"../../services/MarvelService\";\n\nconst CharInfo = (props) => {\n  const [state, setState] = useState({\n    char: null,\n    loading: false,\n    error: false,\n  });\n\n  const marvelService = new MarvelService();\n\n  const onCharLoading = () => {\n    setState({ loading: true });\n  };\n\n  const onCharLoaded = (char) => {\n    setState({ char, loading: false });\n  };\n\n  const onError = () => {\n    setState({\n      loading: false,\n      error: false,\n    });\n  };\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    onCharLoading();\n    marvelService.getCharacter(charId).then(onCharLoaded).catch(onError);\n  };\n\n  const { char, loading, error } = state;\n\n  const skeleton = char || loading || error ? null : <Skeletion />;\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  let style = false;\n\n  function notImg(thumbnail) {\n    if (thumbnail.includes(\"image_not_available\")) {\n      style = true;\n      return style, thumbnail;\n    }\n    return thumbnail;\n  }\n\n  function checkDescription(description) {\n    if (description != \"\") {\n      return description;\n    } else {\n      return (description = \"There is no description yet.\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img\n          src={notImg(thumbnail)}\n          alt={name}\n          style={style ? { objectFit: \"contain\" } : { objectFit: \"cover\" }}\n        />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">HomePage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{checkDescription(description)}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"Didn't have a comics.\"}\n        {comics.map((item, i) => {\n          if (i <= 9) {\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React, { useState } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    selectedChar: null,\n  });\n\n  const onCharSelected = (id) => {\n    setState({\n      selectedChar: id,\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <AppHeader />\n      <main>\n        <RandomChar />\n        <div className=\"char__content\">\n          <CharList onCharSelected={onCharSelected} />\n          <CharInfo charId={state.selectedChar} />\n        </div>\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport \"./style/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}