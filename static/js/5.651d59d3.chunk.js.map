{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ComicsList","useState","comics","setComics","offset","setOffset","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","useMarvelService","error","loading","getAllComics","clearError","useEffect","onRequest","initial","then","onComicsLoaded","newComics","ended","length","errorMessage","ErrorMessage","spinner","Spinner","items","map","i","className","to","id","src","thumbnail","alt","title","price","View","onClick","disabled","style","display","AppBanner","avengers","avengersLogo","ComicsPage"],"mappings":"yJAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,yJIuE/EC,EArEI,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,KAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAqDC,cAA7CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,aAAcC,EAAtC,EAAsCA,WAEtCC,qBAAU,WACRC,EAAUZ,GAAQ,KACjB,IAEH,IAAMY,EAAY,SAACZ,EAAQa,GACfV,GAAVU,GACAH,IACAD,EAAaT,GAAQc,KAAKC,IAGtBA,EAAiB,SAACC,GACtB,IAAIC,GAAQ,EACRD,EAAUE,OAAS,IACrBD,GAAQ,GAEVlB,EAAU,GAAD,mBAAKD,GAAL,YAAgBkB,KACzBf,GAAU,SAACD,GAAD,OAAYA,EAAS,KAC/BG,GAAkB,GAClBE,EAAeY,IAsBXE,EAAeZ,EAAQ,cAACa,EAAA,EAAD,IAAmB,KAC1CC,EAAUb,EAAU,cAACc,EAAA,EAAD,IAAc,KAClCC,EArBO,SAACzB,GACZ,IAAMyB,EAAQzB,EAAO0B,KAAI,SAAC1B,EAAQ2B,GAChC,OACE,oBAAIC,UAAU,eAAd,SACE,eAAC,IAAD,CAAMC,GAAE,kBAAa7B,EAAO8B,IAA5B,UACE,qBACEC,IAAK/B,EAAOgC,UACZC,IAAKjC,EAAOkC,MACZN,UAAU,qBAEZ,qBAAKA,UAAU,oBAAf,SAAoC5B,EAAOkC,QAC3C,qBAAKN,UAAU,qBAAf,SAAqC5B,EAAOmC,YARdR,MAatC,OAAO,oBAAIC,UAAU,eAAd,SAA8BH,IAKzBW,CAAKpC,GAEnB,OACE,sBAAK4B,UAAU,eAAf,UACGP,EACAE,EACAE,EACD,wBACEG,UAAU,mCACVS,QAAS,kBAAMvB,EAAUZ,IACzBoC,SAAUlC,EACVmC,MAAOjC,EAAc,CAAEkC,QAAS,QAAW,CAAEA,QAAS,SAJxD,SAME,qBAAKZ,UAAU,QAAf,6BCtEO,G,MAAA,IAA0B,sCCA1B,MAA0B,0CCiB1Ba,EAbG,WACd,OACI,sBAAKb,UAAU,cAAf,UACI,qBAAKG,IAAKW,EAAUT,IAAI,aACxB,sBAAKL,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAKG,IAAKY,EAAcV,IAAI,sBCDzBW,UATI,WACjB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/5.651d59d3.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"./comicsList.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst ComicsList = () => {\n  const [comics, setComics] = useState([]);\n  const [offset, setOffset] = useState(210);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { error, loading, getAllComics, clearError } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    clearError();\n    getAllComics(offset).then(onComicsLoaded);\n  };\n\n  const onComicsLoaded = (newComics) => {\n    let ended = false;\n    if (newComics.length < 8) {\n      ended = true;\n    }\n    setComics([...comics, ...newComics]);\n    setOffset((offset) => offset + 8);\n    setNewItemLoading(false);\n    setComicsEnded(ended);\n  };\n\n  const View = (comics) => {\n    const items = comics.map((comics, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${comics.id}`}>\n            <img\n              src={comics.thumbnail}\n              alt={comics.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{comics.title}</div>\n            <div className=\"comics__item-price\">{comics.price}</div>\n          </Link>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{items}</ul>;\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const items = View(comics);\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        style={comicsEnded ? { display: \"none\" } : { display: \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}