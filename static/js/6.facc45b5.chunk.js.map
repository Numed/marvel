{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","comic","title","description","pageCount","price","thumbnail","language","className","src","alt","to","SingleComicPage","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComics","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"oMAsCMA,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACNC,EAA8DD,EAA9DC,MAAOC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,UAAWC,EAA+BJ,EAA/BI,MAAOC,EAAwBL,EAAxBK,UAAWC,EAAaN,EAAbM,SACzD,OACE,mCACE,sBAAKC,UAAU,eAAf,UACE,qBAAKC,IAAKH,EAAWI,IAAKR,EAAOM,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,SAAoCN,IACpC,mBAAGM,UAAU,sBAAb,SAAoCL,IACpC,mBAAGK,UAAU,sBAAb,SAAoCJ,IACpC,oBAAGI,UAAU,sBAAb,uBAA8CD,KAC9C,qBAAKC,UAAU,sBAAf,SAAsCH,OAExC,cAAC,IAAD,CAAMM,GAAG,UAAUH,UAAU,qBAA7B,+BAQOI,UApDS,WACtB,IAAQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOd,EAAP,KAAce,EAAd,KACA,EAAkDC,cAA1CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,WAEnCC,qBAAU,WACRC,MACC,CAACV,IAEJ,IAAMU,EAAc,WAClBF,IACAD,EAAUP,GAASW,KAAKC,IAGpBA,EAAgB,SAACxB,GACrBe,EAASf,IAGLyB,EAAeP,EAAQ,cAAC,IAAD,IAAmB,KAC1CQ,EAAUT,EAAU,cAAC,IAAD,IAAc,KAClCU,EAAYV,GAAWC,IAAUlB,EAAkC,KAAzB,cAACD,EAAD,CAAMC,MAAOA,IAE7D,OACE,qCACGyB,EACAC,EACAC","file":"static/js/6.facc45b5.chunk.js","sourcesContent":["import \"./singleComicPage.scss\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst SingleComicPage = () => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const { loading, error, getComics, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId]);\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComics(comicId).then(onComicLoaded);\r\n  };\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { title, description, pageCount, price, thumbnail, language } = comic;\r\n  return (\r\n    <>\r\n      <div className=\"single-comic\">\r\n        <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n        <div className=\"single-comic__info\">\r\n          <h2 className=\"single-comic__name\">{title}</h2>\r\n          <p className=\"single-comic__descr\">{description}</p>\r\n          <p className=\"single-comic__descr\">{pageCount}</p>\r\n          <p className=\"single-comic__descr\">Language: {language}</p>\r\n          <div className=\"single-comic__price\">{price}</div>\r\n        </div>\r\n        <Link to=\"/comics\" className=\"single-comic__back\">\r\n          Back to all\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n"],"sourceRoot":""}