{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/ErrorMessage/error.gif","components/ErrorMessage/ErrorMessage.js","services/MarvelService.js","hooks/https.hooks.js","components/spinner/Spinner.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ComicsList","useState","comics","setComics","offset","setOffset","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","useMarvelService","error","loading","getAllComics","clearError","useEffect","onRequest","initial","then","onComicsLoaded","newComics","ended","length","errorMessage","ErrorMessage","spinner","Spinner","items","map","i","CSSTransition","classNames","timeout","className","to","id","src","thumbnail","alt","title","price","TransitionGroup","component","View","onClick","disabled","style","display","ComicsPage","Helmet","name","content","AppBanner","width","height","objectFit","margin","img","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacter","getCharacterByName","char","description","slice","path","extension","homepage","urls","wiki","_transformComics","getComics","pageCount","language","textObjects","prices","avengers","avengersLogo"],"mappings":"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","file":"static/js/8.dfbd6206.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"./comicsList.scss\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nconst ComicsList = () => {\n  const [comics, setComics] = useState([]);\n  const [offset, setOffset] = useState(210);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { error, loading, getAllComics, clearError } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    clearError();\n    getAllComics(offset).then(onComicsLoaded);\n  };\n\n  const onComicsLoaded = (newComics) => {\n    let ended = false;\n    if (newComics.length < 8) {\n      ended = true;\n    }\n    setComics([...comics, ...newComics]);\n    setOffset((offset) => offset + 8);\n    setNewItemLoading(false);\n    setComicsEnded(ended);\n  };\n\n  const View = (comics) => {\n    const items = comics.map((comics, i) => {\n      return (\n        <CSSTransition\n          key={comics.id}\n          classNames={\"comics__item\"}\n          timeout={300}\n        >\n          <li className=\"comics__item\" key={i}>\n            <Link to={`/comics/${comics.id}`}>\n              <img\n                src={comics.thumbnail}\n                alt={comics.title}\n                className=\"comics__item-img\"\n              />\n              <div className=\"comics__item-name\">{comics.title}</div>\n              <div className=\"comics__item-price\">{comics.price}</div>\n            </Link>\n          </li>\n        </CSSTransition>\n      );\n    });\n    return (\n      <ul className=\"comics__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const items = View(comics);\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n        disabled={newItemLoading}\n        style={comicsEnded ? { display: \"none\" } : { display: \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics Page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nfunction ErrorMessage() {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/https.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=3b3962af7c9aa2832c028fd9f23a5a5c\";\r\n  const _baseOffset = 210;\r\n  const __comicsBaseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}/characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = __comicsBaseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComics = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || \"en-us\",\r\n      price: comics.prices.price ? `${comics.prices.price}$` : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    clearError,\r\n    getAllComics,\r\n    getComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import \"./spinner.scss\";\r\n\r\nfunction Spinner() {\r\n  return <div className=\"lds-dual-ring\"></div>;\r\n}\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}